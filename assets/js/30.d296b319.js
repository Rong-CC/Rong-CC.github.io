(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{416:function(e,t,r){"use strict";r.r(t);var s=r(54),a=Object(s.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h3",{attrs:{id:"安装brew"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#安装brew"}},[e._v("#")]),e._v(" 安装brew")]),e._v(" "),r("p",[e._v("不过看到一个大佬放上一条命令，直接解决了这一系列问题，可以下载。很感谢这位大佬，不多说直接上命令：")]),e._v(" "),r("p",[e._v("自动脚本(全部国内地址)（在Mac os终端中复制粘贴回车下面这句话)")]),e._v(" "),r("div",{staticClass:"language-nginx extra-class"},[r("pre",{pre:!0,attrs:{class:"language-nginx"}},[r("code",[e._v('/bin/zsh -c "$(curl -fsSL https://gitee.com/cunkai/HomebrewCN/raw/master/Homebrew.sh)"\n')])])]),r("h3",{attrs:{id:"tree-项目结构图"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#tree-项目结构图"}},[e._v("#")]),e._v(" tree 项目结构图")]),e._v(" "),r("p",[e._v("Mac下可以使用"),r("code",[e._v("brew install tree")]),e._v("进行安装。安装后，在terminal中输入"),r("code",[e._v("tree -a")]),e._v("便可以查看某个文件夹下的所有文件。")]),e._v(" "),r("p",[e._v("常用的命令\n当然了，我们的需求肯定不止列出所有文件这么简单。下面介绍几个常用的命令")]),e._v(" "),r("ul",[r("li",[e._v("tree -d 只显示文件夹；")]),e._v(" "),r("li",[e._v("tree -L n 显示项目的层级。n表示层级数。比如想要显示项目三层结构，可以用tree -l 3；")]),e._v(" "),r("li",[e._v('tree -I pattern 用于过滤不想要显示的文件或者文件夹。比如你想要过滤项目中的node_modules文件夹，可以使用tree -I "node_modules"；')]),e._v(" "),r("li",[e._v("tree > tree.md 将项目结构输出到tree.md这个文件。")])]),e._v(" "),r("p",[e._v("举个例子，如果我们要显示某个项目下3层的所有文件结构，同时又过滤node_modules文件夹，最后输出到tree.md，可以这么写")]),e._v(" "),r("div",{staticClass:"language-bash extra-class"},[r("pre",{pre:!0,attrs:{class:"language-bash"}},[r("code",[e._v("tree -L "),r("span",{pre:!0,attrs:{class:"token number"}},[e._v("3")]),e._v(" -I "),r("span",{pre:!0,attrs:{class:"token string"}},[e._v('"node_modules"')]),e._v("\n")])])]),r("p",[e._v("更多命令的使用可以查看"),r("code",[e._v("tree --help")])])])}),[],!1,null,null,null);t.default=a.exports}}]);