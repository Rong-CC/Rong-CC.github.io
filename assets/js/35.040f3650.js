(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{419:function(t,_,v){"use strict";v.r(_);var e=v(54),r=Object(e.a)({},(function(){var t=this,_=t.$createElement,v=t._self._c||_;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h3",{attrs:{id:"http-和https-特点"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#http-和https-特点"}},[t._v("#")]),t._v(" http 和https 特点")]),t._v(" "),v("p",[t._v("http  超文本传输协议，一个基于tcp实现的应用层协议")]),t._v(" "),v("h3",{attrs:{id:"http特点"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#http特点"}},[t._v("#")]),t._v(" http特点")]),t._v(" "),v("ul",[v("li",[t._v("支持客户端/服务器模式")]),t._v(" "),v("li",[t._v("简单快速 : 客户向服务器请求服务时，只需要清求方法和路径。http 服务器的程序规模小，因而通信速度很快")]),t._v(" "),v("li",[t._v("灵活： http 允许传输任意类型的数据对象，正在传输的类型由Content-type加以标记")]),t._v(" "),v("li",[t._v("无链接： 无链接的含义是限制每次只处理一个请求。服务器处理完客户的请求。并收到客户的答应后，即断开链接，采用这种方式可以节省传输时间。")]),t._v(" "),v("li",[t._v("无状态：http 协议是无状态协议。无状态是指协议对于事物处理没有记忆能力。缺少状态意味着俄如果后续处理需要的前面信息，它必须重传，这样可能会导致每次链接传送的数据量增大，另一方面，在服务器不需要先前信息时它的应答就会更快。")])]),t._v(" "),v("p",[v("strong",[t._v("HTTP请求响应模型")])]),t._v(" "),v("p",[t._v("HTTP是一个无状态的协议。无状态是指客户机（Web浏览器）和服务器之间不需要建立持久的连接，这意味着当一个客户端向服务器端发出请求，然后服务器返回响应(response)，连接就被关闭了，在服务器端不保留连接的有关信息.HTTP遵循请求(Request)/应答(Response)模型。客户机（浏览器）向服务器发送请求，服务器处理请求并返回适当的应答。所有HTTP连接都被构造成一套请求和应答。")]),t._v(" "),v("p",[v("strong",[t._v("tcp协议")])]),t._v(" "),v("p",[t._v("CP 的全称是"),v("code",[t._v("Transmission Control Protocol")]),t._v(" ，传输控制协议。它能够帮助你确定计算机连接到 Internet 以及它们之间的数据传输。通过三次握手来建立 TCP 连接，三次握手就是用来启动和确认 TCP 连接的过程。一旦连接建立后，就可以发送数据了，当数据传输完成后，会通过关闭虚拟电路来断开连接。")]),t._v(" "),v("p",[t._v("TCP 的主要特点有")]),t._v(" "),v("ul",[v("li",[t._v("TCP 能够确保连接的建立和数据包的发送")]),t._v(" "),v("li",[t._v("TCP 支持错误重传机制")]),t._v(" "),v("li",[t._v("TCP 支持拥塞控制，能够在网络拥堵的情况下延迟发送")]),t._v(" "),v("li",[t._v("TCP 能够提供错误校验和，甄别有害的数据包。")])]),t._v(" "),v("p",[t._v("三次握手")]),t._v(" "),v("p",[t._v("​\t第一次： 客户端向服务器发出连接请求报文，这时报文首部中的同部位"),v("code",[t._v("SYN=1")]),t._v("，同时随机生成初始序列号 "),v("code",[t._v("seq=x")]),t._v("，此时 tcp 客户端进程进入了"),v("code",[t._v("SYN-SENT")]),t._v("（同步已发送状态）状态。tcp规定 SNY报文段不能携带数据，但需要消耗一个 序号。")]),t._v(" "),v("p",[t._v("​\t第二次：TCP 服务器收到请求报文后，同意连接发出确定报文，报文中有 ACK =1，SYN=1，确认号是"),v("code",[t._v("ack=x+1")]),t._v("，同时也自己生成一个序列号"),v("code",[t._v("seq=y")]),t._v("，此时tcp服务器进程"),v("code",[t._v("SYN-RCVD")]),t._v("（同步收到）状态，这个报文也不能携带数据，但是同样消耗一个序号，这个报文带有"),v("code",[t._v("syn")]),t._v("（建立）和"),v("code",[t._v("ack")]),t._v("(确定)标志，询问客户daunt是否准备好")]),t._v(" "),v("p",[t._v("​\t第三次： TCP客户进程收到确定好，还要向服务器给出确定。确定报文的"),v("code",[t._v("ACK=1")]),t._v("，"),v("code",[t._v("ack=y+1")]),t._v("，此刻TCP连接建立。客户端进入ESTABLISHED（已建立连接）状态")]),t._v(" "),v("h3",{attrs:{id:"https"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#https"}},[t._v("#")]),t._v(" HTTPS")]),t._v(" "),v("p",[t._v("HTTPS是在HTTP上建立SSL加密层，并对传输数据进行加密，是HTTP协议的安全版。HTTPS主要作用是：")]),t._v(" "),v("ul",[v("li",[t._v("对数据进行加密，并建立一个信息安全通道，来保证传输过程中的数据安全")]),t._v(" "),v("li",[t._v("对网站服务器进行真实身份认证")])]),t._v(" "),v("h4",{attrs:{id:"tls-ssl工作原理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#tls-ssl工作原理"}},[t._v("#")]),t._v(" TLS/SSL工作原理")]),t._v(" "),v("p",[t._v("HTTPS协议的主要功能基本都依赖于TLS/SSL协议，TLS/SSL的功能实现主要依赖于三类基本算法：散列函数 Hash、对称加密和非对称加密，其利用非对称加密实现身份认证和密钥协商，对称加密算法采用协商的密钥对数据加密，基于散列函数验证信息的完整性。")]),t._v(" "),v("p",[t._v("在 iOS 中，客户端本地会存放着 CA 证书，在HTTPS 请求时，会首先像服务器索要公钥，获得公钥后会使用本地 CA 证书验证公钥的正确性，然后通过正确的公钥加密信息发送给服务器，服务器会使用私钥解密信息。")]),t._v(" "),v("p",[t._v("SSL/TLS握手阶段分为五步：\n以下引自 "),v("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2014/09/illustration-ssl.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("阮一峰的网络日志"),v("OutboundLink")],1),t._v('\n第一步，爱丽丝给出协议版本号、一个客户端生成的随机数（Client random），以及客户端支持的加密方法。\n第二步，鲍勃确认双方使用的加密方法，并给出数字证书、以及一个服务器生成的随机数（Server random）。\n第三步，爱丽丝确认数字证书有效，然后生成一个新的随机数（Premaster secret），并使用数字证书中的公钥，加密这个随机数，发给鲍勃。\n第四步，鲍勃使用自己的私钥，获取爱丽丝发来的随机数（即Premaster secret）。\n第五步，爱丽丝和鲍勃根据约定的加密方法，使用前面的三个随机数，生成"对话密钥"（session key），用来加密接下来的整个对话过程。')]),t._v(" "),v("p",[t._v("HTTPS 相对于 HTTP 性能上差点，因为多了 SSL/TLS 的几次握手和加密解密的运算处理，但是加密解密的运算处理已经可以通过特有的硬件来加速处理。")]),t._v(" "),v("h3",{attrs:{id:"常见的状态码"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#常见的状态码"}},[t._v("#")]),t._v(" 常见的状态码")]),t._v(" "),v("h4",{attrs:{id:"_2xx-成功"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2xx-成功"}},[t._v("#")]),t._v(" 2XX 成功")]),t._v(" "),v("ul",[v("li",[t._v("200 OK，表示从客户端发来的请求在服务器端被正确处理")]),t._v(" "),v("li",[t._v("204 No content，表示请求成功，但响应报文不含实体的主体部分")]),t._v(" "),v("li",[t._v("206 Partial Content，进行范围请求")])]),t._v(" "),v("h4",{attrs:{id:"_3xx-重定向"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3xx-重定向"}},[t._v("#")]),t._v(" 3XX 重定向")]),t._v(" "),v("ul",[v("li",[t._v("301 moved permanently，永久性重定向，表示资源已被分配了新的 URL")]),t._v(" "),v("li",[t._v("302 found，临时性重定向，表示资源临时被分配了新的 URL")]),t._v(" "),v("li",[t._v("303 see other，表示资源存在着另一个 URL，应使用 GET 方法丁香获取资源")]),t._v(" "),v("li",[t._v("304 not modified，表示服务器允许访问资源，但因发生请求未满足条件的情况")]),t._v(" "),v("li",[t._v("307 temporary redirect，临时重定向，和302含义相同")])]),t._v(" "),v("h4",{attrs:{id:"_4xx-客户端错误"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_4xx-客户端错误"}},[t._v("#")]),t._v(" 4XX 客户端错误")]),t._v(" "),v("ul",[v("li",[t._v("400 bad request，请求报文存在语法错误")]),t._v(" "),v("li",[t._v("401 unauthorized，表示发送的请求需要有通过 HTTP 认证的认证信息")]),t._v(" "),v("li",[t._v("403 forbidden，表示对请求资源的访问被服务器拒绝")]),t._v(" "),v("li",[t._v("404 not found，表示在服务器上没有找到请求的资源")])]),t._v(" "),v("h4",{attrs:{id:"_5xx-服务器错误"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_5xx-服务器错误"}},[t._v("#")]),t._v(" 5XX 服务器错误")]),t._v(" "),v("ul",[v("li",[t._v("500 internal sever error，表示服务器端在执行请求时发生了错误")]),t._v(" "),v("li",[t._v("503 service unavailable，表明服务器暂时处于超负载或正在停机维护，无法处理请求")])])])}),[],!1,null,null,null);_.default=r.exports}}]);